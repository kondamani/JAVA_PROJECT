pipeline {
  agent {
    docker {
      image 'kondamani/newimgjava:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/kondamani/JAVA_PROJECT.git'
        sh 'git config --global --add safe.directory /var/lib/jenkins/workspace/java-project'
      }
    }
    stage('Debug Git Info') {
      steps {
        sh '''
          echo "Workspace contents:"
          ls -al

          echo "Current directory:"
          pwd

          echo "Git status:"
          git status || echo "Git status failed, maybe not a repo"
        '''
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR fileeeeee
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.87.184.220:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "kondamani/javaproject:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Helm Chart and Push') {
        environment {
            GIT_REPO_NAME = "JAVA_PROJECT"
            GIT_USER_NAME = "kondamani"
        }
        steps {
         
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "m.kondamani1985@gmail.com"
                    git config user.name "kondamani"

                    
                    sed -i "s/tag: .*/tag: \\"${BUILD_NUMBER}\\"/" java-maven-sonar-argocd-helm-k8s/eks/helm-chart/javapro/values.yaml

                    git add java-maven-sonar-argocd-helm-k8s/eks/helm-chart/javapro/values.yaml
                    git commit -m "Update image tag to ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main

                '''
            }
      }
    }
  }
}
